@if(MesasExamenes==null)
{
    <h5>cargando...</h5>
}
else
{
    var mesasAgrupadasPorAnio = MesasExamenes.OrderBy(m=>m.Materia.AnioCarreraId).GroupBy(m => m.Materia.AnioCarreraId);
    foreach (var grupo in mesasAgrupadasPorAnio)
    {
        var primeraMesa = grupo.First();
        <h3>@primeraMesa.Materia.AnioCarrera.Nombre - @primeraMesa.Materia.AnioCarrera.Carrera.Sigla</h3>
        <table class="table table-striped table-hover">
            <thead class="table-dark">
                <tr>
                    <th>Fecha</th>
                    <th>Espacio Curricular</th>
                    <th>Hora</th>
                    <th>Docentes</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var mesaExamen in grupo)
                {
                    <tr>
                        <td>@mesaExamen.Llamado1.Date.ToShortDateString()</td>
                        <td>@mesaExamen.Materia.Nombre</td>
                        <td>@mesaExamen.Horario</td>
                        <td>
                            @{
                                var nombresDocentes = string.Join(" | ", mesaExamen.DetallesMesaExamen
                                .Where(d => d.TipoIntegrante != TipoIntegranteEnum.Suplente)
                                .Select(d => d.Docente.Nombre));
                            }

                            @nombresDocentes
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
}
@code {
    [Parameter]
    public List<MesaExamen> MesasExamenes { get; set; }

}
